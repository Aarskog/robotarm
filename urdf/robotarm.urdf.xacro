<?xml version="1.0"?>
<robot name="yes" xmlns:xacro="http://ros.org/wiki/xacro">

<xacro:include filename="$(find five_dof_robotarm)/urdf/materials.xacro" />



<!-- -->
<!-- Base dimensions -->
<xacro:property name="basex" value="0.1143" />
<xacro:property name="basey" value="0.1143" />
<xacro:property name="basez" value="0.0381" />

<!-- Turntable dimensions -->
<xacro:property name="turntable_height" value="0.01" />
<xacro:property name="turntable_radius" value="0.055" />

<!-- Motor dimensions -->
<xacro:property name="motorx" value="0.0356" />
<xacro:property name="motory" value="0.0355" />
<xacro:property name="motorz" value="0.0506" />

<!-- Mounting plate dimensions -->
<xacro:property name="mpx" value="0.0356" />
<xacro:property name="mpy" value="0.0355" />
<xacro:property name="mpz" value="0.0206" />

<xacro:property name="girder_len" value="0.0635" />


<!-- Mass[kg] -->
<xacro:property name="mass_motor" value="0.126"/>
<xacro:property name="mass_mp" value="0.01"/> <!--Mass mounting plate-->
<xacro:property name="mass_tt" value="0.05"/> <!--Turntable-->

<!-- Operating limits(ol) [rad]-->
<xacro:property name="motor_ol" value="1.92"/><!--110deg-->

<!-- Fixing robot to world frame-->
<link name="world"/>
  <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
  </joint>


<!-- Base -->
<link name="base_link">
  <visual>
    <geometry>
      <box size ="${basex} ${basey} ${basez}"/>
    </geometry>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </visual>
<inertial>
  <origin xyz="0 0 0" rpy="0 0 0"/>
  <mass value="2"/>
  <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
</inertial>
<collision>
  <origin xyz ="0 0 0"/>
  <geometry>
    <box size ="${basex} ${basey} ${basez}"/>
  </geometry>
</collision>
</link>

<link name="turntable">
  <visual>
    <geometry>
      <cylinder radius= "${turntable_radius}" length= "${turntable_height}"/>
    </geometry>
    <origin xyz ="0 0 0"/>
    <material name="orange"/>
  </visual>
  <collision>
    <origin xyz ="0 0 0"/>
    <geometry>
      <cylinder radius= "${turntable_radius}" length= "${turntable_height}"/>
    </geometry>
  </collision>
  <inertial>
     <origin xyz="0 0 0" rpy="0 0 0"/>
     <mass value="${mass_tt}"/>
     <inertia
       ixx="${mass_tt / 12.0 * (3*turntable_radius*turntable_radius + turntable_height*turntable_height)}" ixy="0.0" ixz="0.0"
       iyy="${mass_tt / 12.0 * (3*turntable_radius*turntable_radius + turntable_height*turntable_height)}" iyz="0.0"
       izz="${mass_tt / 12.0 * (turntable_radius*turntable_radius)}"/>
   </inertial>

</link>
<joint name="base_to_turntable" type="continuous">
  <parent link="base_link"/>
  <child link="turntable"/>
  <origin xyz="0 0 ${(basez+turntable_height)/2}"/>
  <axis xyz ="0 0 1"/>
</joint>

<transmission name="turntable_trans">
  <type>transmisson_interface/SimpleTransmission</type>
  <actuator name="$turntable_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="base_to_turntable">
    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
  </joint>
</transmission>

<!--Motor macro-->
<xacro:macro name="motor" params="prefix z_coord parent">
<link name="${prefix}_motor">
  <visual>
    <geometry>
      <box size ="${motorx} ${motory} ${motorz}"/>
    </geometry>
    <origin xyz ="0 0 ${motorz/2}"/>
    <material name="blue"/>
  </visual>
<collision>
  <origin xyz ="0 0 ${motorz/2}"/>
  <geometry>
    <box size ="${motorx} ${motory} ${motorz}"/>
  </geometry>
</collision>
<inertial>
   <origin xyz="0 0 ${motorz/2}" rpy="0 0 0"/>
   <mass value="${mass_motor}"/>
   <inertia
   ixx="${mass_motor / 12.0 * (motorx*motorx + motorz*motorz)}" ixy="0.0" ixz="0.0"
   iyy="${mass_motor / 12.0 * (motorz*motorz + motory*motory)}" iyz="0.0"
   izz="${mass_motor / 12.0 * (motorx*motorx + motory*motory)}"/>
 </inertial>
</link>
<joint name="${parent}_to_${prefix}_motor" type="fixed">
  <parent link="${parent}"/>
  <child link="${prefix}_motor"/>
  <origin xyz="0 0 ${z_coord}"/>
  <axis xyz ="1 0 0"/>
</joint>
</xacro:macro>

<!--Mounting plate macro-->
<xacro:macro name="mounting_plate" params="prefix z_coord parent">
<link name="${prefix}_mounting_plate">
  <visual>
    <geometry>
      <box size ="${mpx} ${mpy} ${mpz}"/>
    </geometry>
    <origin xyz ="0 0 ${mpz/2}" rpy="0 0 0"/>
  </visual>
<collision>
  <origin xyz ="0 0 ${mpz/2}"/>
  <geometry>
    <box size ="${mpx} ${mpy} ${mpz}"/>
  </geometry>
</collision>
<inertial>
   <origin xyz="0 0 ${mpz/2}" rpy="0 0 0"/>
   <mass value="${mass_mp}"/>
   <inertia
   ixx="${mass_mp / 12.0 * (mpx*mpx + mpz*mpz)}" ixy="0.0" ixz="0.0"
   iyy="${mass_mp / 12.0 * (mpz*mpz + mpy*mpy)}" iyz="0.0"
   izz="${mass_mp / 12.0 * (mpx*mpx + mpy*mpy)}"/>
 </inertial>
</link>
<joint name="${parent}_to_${prefix}_mounting_plate" type="revolute">
  <parent link="${parent}"/>
  <child link="${prefix}_mounting_plate"/>
  <origin xyz="0 0 ${z_coord}"/>
  <axis xyz ="1 0 0"/>
  <dynamics damping="0.1"/>
  <limit effort="10" lower="${-motor_ol}" upper="${motor_ol}" velocity="5"/>
</joint>
</xacro:macro>

<xacro:motor prefix="second" z_coord="${turntable_height/2}" parent="turntable"/>
<xacro:mounting_plate prefix="first" z_coord="${motorz}" parent="second_motor"/>

<link name="girder">
  <visual>
    <geometry>
      <!--<mesh filename="package://five_dof_robotarm/stl_files/25Girder.igs"/>-->
      <box size ="${mpx} ${mpy} ${girder_len}"/>
    </geometry>
    <origin xyz ="0 0 ${girder_len/2}"/>
      <material name="cyan"/>
  </visual>
  <collision>
    <origin xyz ="0 0 ${girder_len/2}"/>
    <geometry>
      <box size ="${mpx} ${mpy} ${girder_len}"/>
    </geometry>
  </collision>
  <inertial>
     <origin xyz="0 0 ${girder_len/2}" rpy="0 0 0"/>
     <mass value="${mass_mp*3}"/>
     <inertia
     ixx="${mass_mp*3 / 12.0 * (mpx*mpx + girder_len*girder_len)}" ixy="0.0" ixz="0.0"
     iyy="${mass_mp*3 / 12.0 * (girder_len*girder_len + mpy*mpy)}" iyz="0.0"
     izz="${mass_mp*3 / 12.0 * (mpx*mpx + mpy*mpy)}"/>
   </inertial>
</link>
<joint name="first_mounting_plate_to_girder" type="fixed">
  <parent link="first_mounting_plate"/>
  <child link="girder"/>
  <origin xyz="0 0 ${mpz}"/>
  <axis xyz ="1 0 0"/>
</joint>

<xacro:motor prefix="third" z_coord="${girder_len}" parent="girder"/>
<xacro:mounting_plate prefix="second" z_coord="${motorz}" parent="third_motor"/>
<xacro:motor prefix="fourth" z_coord="${mpz}" parent="second_mounting_plate"/>
<xacro:mounting_plate prefix="third" z_coord="${motorz}" parent="fourth_motor"/>

<!-- Wrist rotate kit -->
<link name="wrist_rk">
  <visual>
    <geometry>
      <box size ="${mpx} ${mpy} ${motorz}"/>
    </geometry>
    <origin xyz ="0 0 ${motorz/2}"/>
      <material name="cyan"/>
  </visual>
  <collision>
    <origin xyz ="0 0 ${motorz/2}"/>
    <geometry>
      <box size ="${mpx} ${mpy} ${motorz}"/>
    </geometry>
  </collision>
  <inertial>
     <origin xyz="0 0 ${motorz/2}" rpy="0 0 0"/>
     <mass value="${mass_motor}"/>
     <inertia
     ixx="${mass_motor / 12.0 * (motorx*motorx + motorz*motorz)}" ixy="0.0" ixz="0.0"
     iyy="${mass_motor / 12.0 * (motorz*motorz + motory*motory)}" iyz="0.0"
     izz="${mass_motor / 12.0 * (motorx*motorx + motory*motory)}"/>
   </inertial>

</link>

<joint name="third_mounting_plate_to_wrist_rk" type="fixed">
  <parent link="third_mounting_plate"/>
  <child link="wrist_rk"/>
  <origin xyz="0 0 ${mpz}"/>
  <axis xyz ="0 0 1"/>
</joint>

<!-- Wrist -->
<link name="wrist">
  <visual>
    <geometry>
      <box size ="${mpx} ${mpy*2} ${motorz/2}"/>
    </geometry>
    <origin xyz ="0 0 ${motorz/4}"/>
      <material name="blue"/>
  </visual>
  <collision>
    <origin xyz ="0 0 ${motorz/4}"/>
    <geometry>
      <box size ="${mpx} ${mpy*2} ${motorz/2}"/>
    </geometry>
  </collision>
  <inertial>
     <origin xyz="0 0 ${motorz/4}" rpy="0 0 0"/>
     <mass value="${mass_motor}"/>
     <inertia
     ixx="${mass_motor / 12.0 * (motorx*motorx + motorz*motorz/4)}" ixy="0.0" ixz="0.0"
     iyy="${mass_motor / 12.0 * (motorz*motorz/4 + motory*motory*4)}" iyz="0.0"
     izz="${mass_motor / 12.0 * (motorx*motorx + motory*motory*4)}"/>
   </inertial>
</link>

<joint name="wrist_rk_to_wrist" type="continuous">
  <parent link="wrist_rk"/>
  <child link="wrist"/>
  <origin xyz="0 0 ${motorz}"/>
  <axis xyz ="0 0 1"/>
</joint>

<!-- Gripper-->
<xacro:property name="finger_length" value="0.08" />
<xacro:property name="finger_width" value="0.0356" />
<xacro:property name="mass_finger" value="0.01" />

<xacro:macro name="finger" params="prefix invert">
<link name="${prefix}_finger">
  <visual>
    <geometry>
      <box size ="${finger_width} ${finger_width/4} ${finger_length}"/>
    </geometry>
    <origin xyz ="0 0 ${finger_length/2}"/>
  </visual>

  <collision>
    <origin xyz ="0 0 ${finger_length/2}"/>
    <geometry>
      <box size ="${finger_width} ${finger_width/4} ${finger_length}"/>
    </geometry>
  </collision>
  <inertial>
     <origin xyz="0 0 ${finger_length/2}" rpy="0 0 0"/>
     <mass value="${mass_finger}"/>
     <inertia
     ixx="${mass_finger / 12.0 * (finger_width*finger_width + finger_length*finger_length)}" ixy="0.0" ixz="0.0"
     iyy="${mass_finger / 12.0 * (finger_length*finger_length + finger_width*finger_width/16)}" iyz="0.0"
     izz="${mass_finger / 12.0 * (finger_width*finger_width + finger_width*finger_width/16)}"/>
   </inertial>
</link>

<joint name="$wrist_to_${prefix}_finger" type="revolute">
  <parent link="wrist"/>
  <child link="${prefix}_finger"/>
  <origin xyz="0 ${invert*mpy} ${mpz}"/>
   <limit effort="1000.0" lower="0.0" upper="${0.548*invert}" velocity="0.5"/>
  <axis xyz ="${invert} 0 0"/>
</joint>
</xacro:macro>

<xacro:finger prefix="right" invert="1"/>
<xacro:finger prefix="left" invert="-1"/>

<!-- Gazebo plugin for ROS Control -->
<gazebo>
   <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
     <robotNamespace>/five_dof_robotarm</robotNamespace>
   </plugin>
 </gazebo>

</robot>
